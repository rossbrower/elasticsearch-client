//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elasticsearch.Client
{
    using System;
    using System.IO;
    using System.Net;
    using System.Net.Http;
    using System.Threading.Tasks;
    
    
    public partial class ElasticsearchClient
    {
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html"/></summary>
        /// <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
        /// <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
        public virtual HttpResponseMessage IndicesDeleteAlias(string index, string name)
        {
            string uri = string.Format("/{0}/_alias/{1}", index, name);
            return this.Execute("DELETE", uri);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html"/></summary>
        /// <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
        /// <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
        public virtual async Task<HttpResponseMessage> IndicesDeleteAliasAsync(string index, string name)
        {
            string uri = string.Format("/{0}/_alias/{1}", index, name);
            return await this.ExecuteAsync("DELETE", uri);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html"/></summary>
        /// <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
        /// <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage IndicesDeleteAlias(string index, string name, Func<IndicesDeleteAliasParameters, IndicesDeleteAliasParameters> options)
        {
            string uri = string.Format("/{0}/_alias/{1}", index, name);
            IndicesDeleteAliasParameters parameters = options.Invoke(new IndicesDeleteAliasParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("DELETE", uri);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html"/></summary>
        /// <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
        /// <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> IndicesDeleteAliasAsync(string index, string name, Func<IndicesDeleteAliasParameters, IndicesDeleteAliasParameters> options)
        {
            string uri = string.Format("/{0}/_alias/{1}", index, name);
            IndicesDeleteAliasParameters parameters = options.Invoke(new IndicesDeleteAliasParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("DELETE", uri);
        }
    }
}
