//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elasticsearch.Client
{
    using System;
    using System.IO;
    using System.Net;
    using System.Net.Http;
    using System.Threading.Tasks;
    
    
    public class PercolateParameters : Parameters
    {
        
        /// <summary>A comma-separated list of specific routing values</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters routing(string value)
        {
            this.SetValue("routing", value);
            return this;
        }
        
        /// <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters preference(string value)
        {
            this.SetValue("preference", value);
            return this;
        }
        
        /// <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters ignore_unavailable(bool value)
        {
            this.SetValue("ignore_unavailable", value.ToString().ToLower());
            return this;
        }
        
        /// <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters allow_no_indices(bool value)
        {
            this.SetValue("allow_no_indices", value.ToString().ToLower());
            return this;
        }
        
        /// <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        /// <param name="value"><para>Options: open,closed,none,all</para><para>Default: open</para></param>
        public virtual PercolateParameters expand_wildcards(string value)
        {
            this.SetValue("expand_wildcards", value);
            return this;
        }
        
        /// <summary>The index to percolate the document into. Defaults to index.</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters percolate_index(string value)
        {
            this.SetValue("percolate_index", value);
            return this;
        }
        
        /// <summary>The type to percolate document into. Defaults to type.</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters percolate_type(string value)
        {
            this.SetValue("percolate_type", value);
            return this;
        }
        
        /// <summary>The routing value to use when percolating the existing document.</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters percolate_routing(string value)
        {
            this.SetValue("percolate_routing", value);
            return this;
        }
        
        /// <summary>Which shard to prefer when executing the percolate request.</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters percolate_preference(string value)
        {
            this.SetValue("percolate_preference", value);
            return this;
        }
        
        /// <summary>Return an array of matching query IDs instead of objects</summary>
        /// <param name="value"><para>Options: ids</para></param>
        public virtual PercolateParameters percolate_format(string value)
        {
            this.SetValue("percolate_format", value);
            return this;
        }
        
        /// <summary>Explicit version number for concurrency control</summary>
        /// <param name="value"></param>
        public virtual PercolateParameters version(long value)
        {
            this.SetValue("version", value);
            return this;
        }
        
        /// <summary>Specific version type</summary>
        /// <param name="value"><para>Options: internal,external,external_gte,force</para></param>
        public virtual PercolateParameters version_type(string value)
        {
            this.SetValue("version_type", value);
            return this;
        }
    }
}
