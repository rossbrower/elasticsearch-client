//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elasticsearch.Client
{
    using System;
    using System.IO;
    using System.Net;
    using System.Net.Http;
    using System.Threading.Tasks;
    
    
    public partial class ElasticsearchClient
    {
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainGet(Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("GET", uri);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainGetAsync(Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("GET", uri);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainGet(Stream body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainGetAsync(Stream body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainGet(Byte[] body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainGetAsync(Byte[] body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainGetString(string body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainGetStringAsync(string body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainPost(Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("POST", uri);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainPostAsync(Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("POST", uri);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainPost(Stream body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainPostAsync(Stream body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainPost(Byte[] body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainPostAsync(Byte[] body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage ClusterAllocationExplainPostString(string body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return mConnection.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html"/></summary>
        /// <param name="body">The index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> ClusterAllocationExplainPostStringAsync(string body, Func<ClusterAllocationExplainParameters, ClusterAllocationExplainParameters> options = null)
        {
            string uri = "/_cluster/allocation/explain";
            if ((options != null))
            {
                ClusterAllocationExplainParameters parameters = options.Invoke(new ClusterAllocationExplainParameters());
                uri = parameters.GetUri(uri);
            }
            return await mConnection.ExecuteAsync("POST", uri, body);
        }
    }
}
