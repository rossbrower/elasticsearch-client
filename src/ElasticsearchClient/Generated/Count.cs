//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elasticsearch.Client
{
    using System;
    using System.IO;
    using System.Net;
    using System.Net.Http;
    using System.Threading.Tasks;
    
    
    public partial class ElasticsearchClient
    {
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(Stream body)
        {
            string uri = "/_count";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(Stream body)
        {
            string uri = "/_count";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(Byte[] body)
        {
            string uri = "/_count";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(Byte[] body)
        {
            string uri = "/_count";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(string body)
        {
            string uri = "/_count";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(string body)
        {
            string uri = "/_count";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(Stream body)
        {
            string uri = "/_count";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(Stream body)
        {
            string uri = "/_count";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(Byte[] body)
        {
            string uri = "/_count";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(Byte[] body)
        {
            string uri = "/_count";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(string body)
        {
            string uri = "/_count";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(string body)
        {
            string uri = "/_count";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(string index, Stream body)
        {
            string uri = string.Format("/{0}/_count", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(string index, Stream body)
        {
            string uri = string.Format("/{0}/_count", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_count", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_count", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(string index, string body)
        {
            string uri = string.Format("/{0}/_count", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(string index, string body)
        {
            string uri = string.Format("/{0}/_count", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(string index, Stream body)
        {
            string uri = string.Format("/{0}/_count", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(string index, Stream body)
        {
            string uri = string.Format("/{0}/_count", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_count", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_count", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(string index, string body)
        {
            string uri = string.Format("/{0}/_count", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(string index, string body)
        {
            string uri = string.Format("/{0}/_count", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountPost(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountPostAsync(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private HttpResponseMessage CountGet(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html"/></summary>
        /// <param name="index">A comma-separated list of indices to restrict the results</param>
        /// <param name="type">A comma-separated list of types to restrict the results</param>
        /// <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
        private async Task<HttpResponseMessage> CountGetAsync(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_count", index, type);
            return await this.ExecuteAsync("GET", uri, body);
        }
    }
}
