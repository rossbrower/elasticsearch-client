//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elasticsearch.Client
{
    using System;
    using System.IO;
    using System.Net;
    using System.Net.Http;
    using System.Threading.Tasks;
    
    
    public partial class ElasticsearchClient
    {
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(Stream body)
        {
            string uri = "/_mtermvectors";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(Stream body)
        {
            string uri = "/_mtermvectors";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(Byte[] body)
        {
            string uri = "/_mtermvectors";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(Byte[] body)
        {
            string uri = "/_mtermvectors";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string body)
        {
            string uri = "/_mtermvectors";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string body)
        {
            string uri = "/_mtermvectors";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(Stream body)
        {
            string uri = "/_mtermvectors";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(Stream body)
        {
            string uri = "/_mtermvectors";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(Byte[] body)
        {
            string uri = "/_mtermvectors";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(Byte[] body)
        {
            string uri = "/_mtermvectors";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string body)
        {
            string uri = "/_mtermvectors";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string body)
        {
            string uri = "/_mtermvectors";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = "/_mtermvectors";
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, Stream body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, Stream body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, Stream body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, Stream body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string body)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/_mtermvectors", index);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string type, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string type, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string type, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string type, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsGet(string index, string type, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsGetAsync(string index, string type, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string type, Stream body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string type, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string type, Stream body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string type, Byte[] body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string type, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string type, Byte[] body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string type, string body)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual HttpResponseMessage MtermvectorsPost(string index, string type, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"/></summary>
        /// <param name="index">The index in which the document resides.</param>
        /// <param name="type">The type of the document.</param>
        /// <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
        /// <param name="options">The function to set optional url parameters.</param>
        public virtual async Task<HttpResponseMessage> MtermvectorsPostAsync(string index, string type, string body, Func<MtermvectorsParameters, MtermvectorsParameters> options)
        {
            string uri = string.Format("/{0}/{1}/_mtermvectors", index, type);
            MtermvectorsParameters parameters = options.Invoke(new MtermvectorsParameters());
            uri = parameters.GetUri(uri);
            return await this.ExecuteAsync("POST", uri, body);
        }
    }
}
