//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elasticsearch.Client
{
    using System;
    using System.IO;
    using System.Net;
    using System.Net.Http;
    using System.Threading.Tasks;
    
    
    public partial class ElasticsearchClient
    {
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsGet(Stream body)
        {
            string uri = "/_field_stats";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsGetAsync(Stream body)
        {
            string uri = "/_field_stats";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsGet(Byte[] body)
        {
            string uri = "/_field_stats";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsGetAsync(Byte[] body)
        {
            string uri = "/_field_stats";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsGet(string body)
        {
            string uri = "/_field_stats";
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsGetAsync(string body)
        {
            string uri = "/_field_stats";
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsPost(Stream body)
        {
            string uri = "/_field_stats";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsPostAsync(Stream body)
        {
            string uri = "/_field_stats";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsPost(Byte[] body)
        {
            string uri = "/_field_stats";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsPostAsync(Byte[] body)
        {
            string uri = "/_field_stats";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsPost(string body)
        {
            string uri = "/_field_stats";
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsPostAsync(string body)
        {
            string uri = "/_field_stats";
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsGet(string index, Stream body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsGetAsync(string index, Stream body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsGet(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsGetAsync(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsGet(string index, string body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return this.Execute("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsGetAsync(string index, string body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return await this.ExecuteAsync("GET", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsPost(string index, Stream body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsPostAsync(string index, Stream body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsPost(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsPostAsync(string index, Byte[] body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private HttpResponseMessage FieldStatsPost(string index, string body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return this.Execute("POST", uri, body);
        }
        
        /// <summary><see href="http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html"/></summary>
        /// <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        /// <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
        private async Task<HttpResponseMessage> FieldStatsPostAsync(string index, string body)
        {
            string uri = string.Format("/{0}/_field_stats", index);
            return await this.ExecuteAsync("POST", uri, body);
        }
    }
}
